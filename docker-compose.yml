# docker-compose.yml
version: '3'
services:
    prometheus:
        container_name: prometheus
        image: prom/prometheus
        volumes:
            - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
            - ./prometheus/alert.rules:/etc/prometheus/alert.rules
            - prometheus_data:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention.time=1y'
            - '--web.enable-lifecycle'
        ports:
            - "9090:9090"
        restart: unless-stopped
        network_mode: host
    node-exporter:
        container_name: node-exporter
        image: prom/node-exporter-linux-armv7
        ports:
            - "9100:9100"
        command:
          - '--web.disable-exporter-metrics'
        network_mode: host
        restart: on-failure
    grafana:
        container_name: grafana
        image: grafana/grafana:latest
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=password
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_AUTH_DISABLE_LOGIN_FORM=false
            - GF_ORG_NAME=Main Org.
            - GF_ORG_ROLE=viewer
        volumes:
            - grafana_data:/var/lib/grafana
        depends_on:
            - prometheus
        ports:
            - "3000:3000"
        network_mode: host
        restart: unless-stopped
    alertmanager:
        container_name: alertmanager
        build: ./alertmanager
        command:
            - '--config.file=/alertmanager.yml'
        ports:
            - "9093:9093"
        network_mode: host
        restart: unless-stopped
volumes:
    prometheus_data: {}
    grafana_data: {}
    dhparam_cache: {}
